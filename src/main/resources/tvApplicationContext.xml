<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    <bean id="tv" class="polymorphism.SamsungTV" init-method="initMethod" destroy-method="destroyMethod"-->
<!--          lazy-init="true" scope="prototype">-->
    <bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="sony" p:price="2700000"/>

<!--        <constructor-arg ref="apple"></constructor-arg>-->
<!--        <constructor-arg value="2700000"></constructor-arg>-->

        <!-- Setter 인젝션 -->
<!--        <property name="speaker" ref="apple"/>-->
<!--        <property name="price" value="2700000"/>-->
<!--    </bean>-->
    <!-- singleton scope 반대 : prototype
        prototype : 해당 bean이 요청될 때마다 매번 새로운 객체를 생성해 반환 -->

    <bean id="apple" class="polymorphism.AppleSpeaker"/>
    <bean id="sony" class="polymorphism.SonySpeaker"/>

</beans>